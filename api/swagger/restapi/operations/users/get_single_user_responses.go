// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "basicAPI/api/swagger/models"
)

// GetSingleUserOKCode is the HTTP code returned for type GetSingleUserOK
const GetSingleUserOKCode int = 200

/*GetSingleUserOK user details

swagger:response getSingleUserOK
*/
type GetSingleUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewGetSingleUserOK creates GetSingleUserOK with default headers values
func NewGetSingleUserOK() *GetSingleUserOK {

	return &GetSingleUserOK{}
}

// WithPayload adds the payload to the get single user o k response
func (o *GetSingleUserOK) WithPayload(payload *models.User) *GetSingleUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single user o k response
func (o *GetSingleUserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSingleUserDefault generic error

swagger:response getSingleUserDefault
*/
type GetSingleUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSingleUserDefault creates GetSingleUserDefault with default headers values
func NewGetSingleUserDefault(code int) *GetSingleUserDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSingleUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get single user default response
func (o *GetSingleUserDefault) WithStatusCode(code int) *GetSingleUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get single user default response
func (o *GetSingleUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get single user default response
func (o *GetSingleUserDefault) WithPayload(payload *models.Error) *GetSingleUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get single user default response
func (o *GetSingleUserDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSingleUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
